(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{111:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return b}));var a=n(3),o=n(7),r=(n(0),n(124)),i={title:"Rasp-bee-ry Pi",id:"rasp-bee-ry-pi"},l={unversionedId:"installation/rasp-bee-ry-pi",id:"installation/rasp-bee-ry-pi",isDocsHomePage:!1,title:"Rasp-bee-ry Pi",description:"You will need:",source:"@site/docs/installation/rasp-bee-ry-pi.md",slug:"/installation/rasp-bee-ry-pi",permalink:"/docs/installation/rasp-bee-ry-pi",editUrl:"https://github.com/ethersphere/docs.github.io/blob/master/docs/installation/rasp-bee-ry-pi.md",version:"current",sidebar:"Balls",previous:{title:"Build from Source",permalink:"/docs/installation/build-from-source"},next:{title:"Hive",permalink:"/docs/installation/hive"}},s=[{value:"Install Raspbian OS and Start Your Pi",id:"install-raspbian-os-and-start-your-pi",children:[]},{value:"Install Bee Clef and Bee",id:"install-bee-clef-and-bee",children:[]},{value:"Bee Tidy",id:"bee-tidy",children:[]}],c={toc:s};function b(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"You will need:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Raspberry Pi 4"),Object(r.b)("li",{parentName:"ul"},"128GB Micro SD Card"),Object(r.b)("li",{parentName:"ul"},"SD card reader or some way to write to your SD Card"),Object(r.b)("li",{parentName:"ul"},"Micro to Normal HDMI Cable (Male->Male)"),Object(r.b)("li",{parentName:"ul"},"USB keyboard and mouse"),Object(r.b)("li",{parentName:"ul"},"USB C power adapter suitiable for your Pi"),Object(r.b)("li",{parentName:"ul"},"A monitor or TV with a HDMI input"),Object(r.b)("li",{parentName:"ul"},"Another computer"),Object(r.b)("li",{parentName:"ul"},"The password for you WiFi network or an ethernet connection*")),Object(r.b)("h3",{id:"install-raspbian-os-and-start-your-pi"},"Install Raspbian OS and Start Your Pi"),Object(r.b)("p",null,"To get started download the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.sdcard.org/downloads/formatter/"}),"official SD card formatter")," and format your card . A 'quick format' should suffice. You may try to skip this step, but completing it will ensure your best chance of success."),Object(r.b)("p",null,"Next download the official ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.raspberrypi.org/software/"}),"Raspberry Pi Imager")," and use it to image the ",Object(r.b)("em",{parentName:"p"},"Raspberry Pi OS")," on to your SD card. This is a port of the Debian Linux operating system which is designed to work well with your Raspberry Pi's hardware."),Object(r.b)("p",null,"Once you have installed the operating system. Take your SD card and\nplace it into your Raspbery Pi. Connect the HDMI cable to suitable\nmonitor, plug in your keyboard and mouse, and then connect the USB C\npower connector to power on the Pi."),Object(r.b)("p",null,"If all goes well, you should see the Raspbian OS starting to to boot up on your Pi! \ud83c\udf89"),Object(r.b)("p",null,"Now all that is left is to click on the WiFi icon to the immediate\nleft of the speaker icon, and connect to your WiFi network. If you are\nusing an ethernet connection, you may simply plug it in to your\nrouter."),Object(r.b)("p",null,"Now click on the ",Object(r.b)("inlineCode",{parentName:"p"},">_")," terminal icon on the right hand side. This is\nthe ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Bash_%28Unix_shell%29"}),"login shell"),"\ng33ks use to interact with the computer. Welcome, you are now one of\nus. \ud83e\udde1"),Object(r.b)("p",null,"Type the following, followed by the enter key to ",Object(r.b)("inlineCode",{parentName:"p"},"ping")," Wikipedia."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"ping wikipedia.org\n")),Object(r.b)("p",null,"If you see something like this, your Pi is now connected to the Internet!"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sig@rapberrypi:~ $ ping wikipedia.org\nPING wikipedia.org (91.198.174.192): 56 data bytes\n64 bytes from 91.198.174.192: icmp_seq=0 ttl=60 time=1469.724 ms\n64 bytes from 91.198.174.192: icmp_seq=1 ttl=60 time=22.271 ms\n")),Object(r.b)("h3",{id:"install-bee-clef-and-bee"},"Install Bee Clef and Bee"),Object(r.b)("p",null,"Next we will install the Bee software, accompanied by a special port of Ethereum's Clef signer, ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/installation/bee-clef"}),"Bee Clef"),"."),Object(r.b)("p",null,"We must install Bee Clef ",Object(r.b)("strong",{parentName:"p"},"before")," Bee. To do so, open the browser\n(the \ud83c\udf10 icon) and type the following to open these docs on your\nRaspberry Pi ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.ethswarm.org"}),"https://docs.ethswarm.org"),"."),Object(r.b)("p",null,"Click ",Object(r.b)("inlineCode",{parentName:"p"},"Install > Bee Clef")," and scroll down to find the installation commands for Bee Clef ",Object(r.b)("strong",{parentName:"p"},"ARM (Raspberry Pi) ARMv7"),". These should look something like: "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"wget https://github.com/ethersphere/bee-clef/releases/download/v0.4.13/bee-clef_0.4.13_armv7.deb\nsudo dpkg -i bee-clef_0.4.13_armv7.deb\n")),Object(r.b)("p",null,"Click ",Object(r.b)("inlineCode",{parentName:"p"},"Copy")," on the right hand side of the box containing the\ninstructions, then go back to your terminal on your Raspberry Pi,\nright click with your mouse and paste in the commands. The first one\nwill execute immediately because there is a 'newline' or 'enter'\ncharacter."),Object(r.b)("p",null,"You should see some output from the ",Object(r.b)("inlineCode",{parentName:"p"},"wget")," command which is a Linux utility this is used to download the correct Bee Clef 'package' from Github, where the development of the Bee utilities takes place."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"bee-clef_0.4.13_armv7.deb.1           100%[===================================================================>]   9.99M  8.21MB/s    in 1.2s    \n\n2021-05-15 17:34:02 (8.21 MB/s) - \u2018bee-clef_0.4.13_armv7.deb\u2019 saved [10473282/10473282]\n\npi@raspberrypi:~ $ sudo dpkg -i bee-clef_0.4.13_armv7.deb\n")),Object(r.b)("p",null,"The other command will be left in your terminal, this uses the ",Object(r.b)("inlineCode",{parentName:"p"},"dpkg")," utility, the Debian Package Manager to install Bee Clef. Package Managers are used to conveniently install software on Linux systems."),Object(r.b)("p",null,"Press enter to start the installation process. All being well, you will see some output like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"pi@raspberrypi:~ $ sudo dpkg -i bee-clef_0.4.13_armv7.deb\nSelecting previously unselected package bee-clef.\n(Reading database ... 98610 files and directories currently installed.)\nPreparing to unpack bee-clef_0.4.13_armv7.deb ...\nUnpacking bee-clef (0.4.13) ...\nSetting up bee-clef (0.4.13) ...\nCreated symlink /etc/systemd/system/multi-user.target.wants/bee-clef.service \u2192 /lib/systemd/system/bee-clef.service.\n")),Object(r.b)("p",null,"Congratulations! You just installed Bee Clef!"),Object(r.b)("p",null,"Now to repeat the process for Bee itself. "),Object(r.b)("p",null,"Go back to the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.ethswarm.org"}),"https://docs.ethswarm.org")," and click ",Object(r.b)("inlineCode",{parentName:"p"},"Installation > Quick Start"),". Scroll down and copy the commands for ",Object(r.b)("strong",{parentName:"p"},"ARM (Raspberry Pi) ARMv7"),"."),Object(r.b)("p",null,"As before, right click and paste these into your terminal, ",Object(r.b)("inlineCode",{parentName:"p"},"wget")," will download the package file, you may then press enter to install the Bee package using ",Object(r.b)("inlineCode",{parentName:"p"},"dpkg"),"."),Object(r.b)("p",null,"After download and installation are complete you will see output similar to the following:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"Please make sure there is sufficient ETH and BZZ available on the node's Ethereum address: 738853974f852a40f6ea9f598596ca8556bd578f.\n\nlearn how to fund your node by visiting our docs at https://docs.ethswarm.org/docs/installation/fund-your-node\n\nOnce the node's wallet has received the funds it will begin joining the Swarm network.\n")),Object(r.b)("p",null,"Your Bee node needs BZZ to be able to properly interact with the network. In order to receive these, you will need to sign into our Discord and request your BZZ test tokens from our #faucet channel using the above Ethereum address."),Object(r.b)("p",null,"Sign into Discord (make an account if you don't have one yet), join our Discord server, complete verification and go to the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://discord.gg/kfKvmZfVfe"}),"#faucet")," channel."),Object(r.b)("p",null,"Here you must ",Object(r.b)("strong",{parentName:"p"},"type")," (not copy paste) the following, ",Object(r.b)("em",{parentName:"p"},"replacing the\naddress with your own"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"/faucet sprinkle 0xabeeecdef123452a40f6ea9f598596ca8556bd57\n")),Object(r.b)("p",null,"After some time, you should receive a notification indicating your\ntransaction has been successful. The faucet will have made a transfer\nof XDAI (for gas), and BZZ (so that you can interact with the Swarm\nnetwork). You can check out what's been going on in the blockchain by\nnavigating to\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://blockscout.com/xdai/mainnet"}),"https://blockscout.com/xdai/mainnet"),"\nand searching your address. All being well, you will see two\nsuccesfull transactions."),Object(r.b)("h2",{id:"bee-tidy"},"Bee Tidy"),Object(r.b)("p",null,"Now, for a moment, let's have a little look around in our Bash Terminal so we can start to feel at home in the command line. Type the following command and press enter:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"ls -la\n")),Object(r.b)("p",null,"You can think of your terminal as a very old way of interacting with your computer that was always there while you were in the graphic user interface, you just didn't know it. The terminal is home to many small programs that are designed to do one purpose very well. This is the Linux mantra. The command line is very powerful, but can be a little unwieldy and clunky at times. Once mastered, your fingers will have gained a magical control of the bits and the bytes."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"ls")," was originally written way back in 1987 but still persists to\nthis day. It is still entered into terminals literally millions of\ntimes a day by thousands of engineers, hobbyists and geeks all over\nthe world and is present in even very basic Linux distributions."),Object(r.b)("p",null,"Here, we have specified the ",Object(r.b)("inlineCode",{parentName:"p"},"l")," 'flag' (",Object(r.b)("inlineCode",{parentName:"p"},"l")," is for 'long') to get the long version of the information and the ",Object(r.b)("inlineCode",{parentName:"p"},"h")," flag to get 'human readable' file sizes."),Object(r.b)("p",null,"Your output should looks something like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"-rw-r--r--  1 pi   pi       3523 Mar  4 22:47 .bashrc\n-rw-r--r--  1 pi   pi   10787806 Mar 23 08:18 bee_1.0.0_armv7.deb\n-rw-r--r--  1 pi   pi   10473282 Feb 24 18:00 bee-clef_0.4.13_armv7.deb\ndrwxr-xr-x  2 pi   pi       4096 Mar  4 22:57 Bookshelf\n")),Object(r.b)("p",null,"For more information, you can use the ",Object(r.b)("inlineCode",{parentName:"p"},"man")," utility to read the\nmanual. Type ",Object(r.b)("inlineCode",{parentName:"p"},"man ls")," for a full list of the options you can specify\nas flags. Press ",Object(r.b)("inlineCode",{parentName:"p"},"q")," to exit the ",Object(r.b)("inlineCode",{parentName:"p"},"man")," program."),Object(r.b)("p",null,"Now, let's use the ",Object(r.b)("inlineCode",{parentName:"p"},"rm")," program to remove the clutter and delete the\n",Object(r.b)("inlineCode",{parentName:"p"},".deb")," files we no longer need."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"rm bee_1.0.0_armv7.deb\n")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"rm")," program gives no output, so let's check it's dissapeared by\nchecking the contents of the directory. This time we will also you the\n'pipe' command, which passes the output of one command to the next,\nand the ",Object(r.b)("inlineCode",{parentName:"p"},"grep")," command which searches through the output and only\nprints lines that match the pattern."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'ls -la | grep "bee"\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"-rw-r--r--  1 pi   pi   10473282 Feb 24 18:00 bee-clef_0.4.13_armv7.deb\n")),Object(r.b)("p",null,"Success! The Bee package file is deleted! Note at the command line\nthere ",Object(r.b)("em",{parentName:"p"},"is no undelete"),". ",Object(r.b)("strong",{parentName:"p"},"With great power comes great\nresposibility"),". Please use your new powers wisely, and only for the\ngood of the swarm as a whole. \ud83d\udc1d\ud83e\udde1"),Object(r.b)("p",null,"All that is left now is to delete the Bee package file, since we have\ncompleted this step. Type ",Object(r.b)("inlineCode",{parentName:"p"},"rm bee")," and press your ",Object(r.b)("inlineCode",{parentName:"p"},"tab")," button. Bash\n(the name of the shell/program running the terminal) will autocomplete\nyour file name. Now press ",Object(r.b)("inlineCode",{parentName:"p"},"enter")," to delete your file."),Object(r.b)("h1",{id:"start-your-bee"},"Start Your Bee"),Object(r.b)("p",null,"If all has gone to plan, by this point your Bee will have been funded by our faucet and you should bee ready to start up your client."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"dpkg")," package manager has used our ",Object(r.b)("inlineCode",{parentName:"p"},".deb")," package file to install\nBee and set up the the ",Object(r.b)("inlineCode",{parentName:"p"},"systemd")," service which will manage and control\nour ",Object(r.b)("inlineCode",{parentName:"p"},"bee")," program as it runs happily in the background on our\ncomputers, earning ",Object(r.b)("inlineCode",{parentName:"p"},"BZZ"),", and serving and forwarding content to other\nbees all over the planet!"),Object(r.b)("p",null,"We can now use the ",Object(r.b)("inlineCode",{parentName:"p"},"systemctl")," utility to interact with ",Object(r.b)("inlineCode",{parentName:"p"},"systemd"),". For more info, you can type ",Object(r.b)("inlineCode",{parentName:"p"},"man systemctl")," to read about it."),Object(r.b)("p",null,"Let's see what the status of your ",Object(r.b)("inlineCode",{parentName:"p"},"bee")," service is."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"systemctl status bee\n")),Object(r.b)("p",null,"You will be shown a bunch of information including the current status and the output of the logs. Press ",Object(r.b)("inlineCode",{parentName:"p"},"q")," to exit."),Object(r.b)("p",null,"Let's see what the current logs are saying."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"journalctl -u bee -f\n")),Object(r.b)("p",null,"Here we have used the ",Object(r.b)("inlineCode",{parentName:"p"},"-u")," flag (",Object(r.b)("inlineCode",{parentName:"p"},"u")," is for unit) to only show the\noutput for the ",Object(r.b)("inlineCode",{parentName:"p"},"bee")," process, and ",Object(r.b)("inlineCode",{parentName:"p"},"f")," for follow, to continuously\nupdate the logs as new ones appear."),Object(r.b)("p",null,"Open another terminal window using the same button as before and type:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"systemctl restart bee\n")),Object(r.b)("p",null,"This will restart the Bee process. You should see some activity in the\nlogs (journal) as Bee shuts down and restarts."),Object(r.b)("p",null,"Now we need to specify some Bee configuration. In order to access the\nblockchain, your Bee needs to access an Ethereum blockchain node. We\nrecommend running your own ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.xdaichain.com/"}),"XDAI Node"),",\nbut for now let's take the easy way and sign up to\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://getblock.io"}),"getblock.io"),". Once you have created an account,\ngo to your dashboard and make a new project (you can call it whatever\nyou'd like to). Then use the api key to create your api url as follows\n",Object(r.b)("inlineCode",{parentName:"p"},"https://stake.getblock.io/mainnet/?api_key=copy-your-api-key-here"),". Keep\nthis open for later."),Object(r.b)("p",null,"Now we will configure your Bee node so it can access the blockchain, deploy your chequebook and start making transactions to cash out those BZZ cheques from your peers! Type:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"sudo nano /etc/bee/bee.yaml \n")),Object(r.b)("p",null,"To open the ",Object(r.b)("inlineCode",{parentName:"p"},"nano")," program which is a old time text editor, we're going to party like it's 1999. Note we're using the ",Object(r.b)("inlineCode",{parentName:"p"},"sudo")," command to wrap ",Object(r.b)("inlineCode",{parentName:"p"},"nano"),". This is short for ",Object(r.b)("inlineCode",{parentName:"p"},"super user do")," and gives us full permissions to do anything in our Raspberry Pi OS."),Object(r.b)("p",null,"Hold down ",Object(r.b)("inlineCode",{parentName:"p"},"Ctrl")," and press ",Object(r.b)("inlineCode",{parentName:"p"},"W")," to access the ",Object(r.b)("inlineCode",{parentName:"p"},"where is?"),"\nfunctionality. Type ",Object(r.b)("inlineCode",{parentName:"p"},"swap-endpoint")," and press ",Object(r.b)("inlineCode",{parentName:"p"},"Enter"),". This will take\nyou to the correct part of the config file. Here we will change the\nvalue to look like the following, using your Infura url from\nbefore. Most configuration at the command line is done by changing\nfiles and then restarting processes just like this! Make sure to pay\nattention to detail so that everything is exact, even one misplaced\ncharacter can cause issues. \ud83d\udd0d"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'## swap ethereum blockchain endpoint (default "http://localhost:8545")\nswap-endpoint: https://stake.getblock.io/mainnet/?api_key=your-api-key\n')),Object(r.b)("p",null,"To save and exit, hold ",Object(r.b)("inlineCode",{parentName:"p"},"Ctrl")," and press ",Object(r.b)("inlineCode",{parentName:"p"},"X"),", then ",Object(r.b)("inlineCode",{parentName:"p"},"Y")," and finally\n",Object(r.b)("inlineCode",{parentName:"p"},"Enter")," to agree to write the file. You can see the different commands\nthat are available listed at the bottom of the screen, for example ",Object(r.b)("inlineCode",{parentName:"p"},"^X\nExit"),"."),Object(r.b)("p",null,"Ok! We're all set! Let's restart Bee and watch our logs as the chequebook transactions begin to be processed."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"systemctl restart bee\n")),Object(r.b)("p",null,"There are many other configuration options available to fine tune\nBee. Please check out the\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/docs/working-with-bee/configuration"}),"configuration")," section of\nthe docs for more info."),Object(r.b)("p",null,"Now, in your other terminal window where Bee's logs are still being\noutput, you should start to see transactions being submitted by Bee to\nthe blockchain and processed. Eventually Bee will begin to connect to\nother Bee 'peers' in the Swarm."),Object(r.b)("p",null,"Once you start to see messages like:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"successfully connected to peer 7fa40ce124d69ecf14d6f7806faaf9df5d639d339a9d343aa7004373f5c46b8f (outbound)\n")),Object(r.b)("p",null,"You're connected to the swarm. Let's do a quick check to find out how\nmany peers we have using the ",Object(r.b)("inlineCode",{parentName:"p"},"curl")," command line utility:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"curl localhost:1635/peers\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{"peers":[{"address":"339cf2ca75f154ffb8dd13de024c4a5c5b53827b8fd21f24bec05835e0cdc2e8"},{"address":"b4e5df012cfc281e74bb517fcf87fc2c07cd787929c332fc805f8124401fabae"} ]}\n\n')),Object(r.b)("p",null,"If you see peers listed here - congratulations! You have joined the swarm! Welcome! \ud83d\udc1d"))}b.isMDXComponent=!0},124:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=o.a.createContext({}),b=function(e){var t=o.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=b(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=b(n),d=a,h=p["".concat(i,".").concat(d)]||p[d]||u[d]||r;return n?o.a.createElement(h,l(l({ref:t},c),{},{components:n})):o.a.createElement(h,l({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);